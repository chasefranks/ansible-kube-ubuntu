---
- hosts: kubes
  remote_user: '{{user}}'
  become: yes

  vars_files:
    - vars.yaml

  tasks:
    - name: template proxy config for apt
      template:
        src: templates/proxy.j2
        dest: /etc/apt/apt.conf.d/proxy
      when: proxy_present == true

    - name: update
      apt:
        update_cache: yes

    - name: install some certs
      apt:
        name: apt-transport-https
        state: installed

    - name: update certs
      command: update-ca-certificates

    - name: add Kubernetes repo key
      apt_key:
        url: "https://packages.cloud.google.com/apt/doc/apt-key.gpg"
        validate_certs: no
      environment: "{{proxy_env}}"

    - name: add Kubernetes repo
      apt_repository:
        repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
        update_cache: yes

    - name: install docker
      apt:
        name: docker.io
        state: latest

    - name: create systemd drop-in dir for docker
      file:
        path: /etc/systemd/system/docker.service.d
        state: directory
      when: proxy_present == true

    - name: add proxy settings to docker
      template:
        src: templates/http-proxy.j2
        dest: /etc/systemd/system/docker.service.d/http-proxy.conf
      notify:
        - systemctl-flush
        - docker-restart
      when: proxy_present == true

    - name: add insecure registry to docker if set
      template:
        src: templates/daemon.json.j2
        dest: /etc/docker/daemon.json
      when: insecure_docker_registry|default("") != ""
      notify:
        - systemctl-flush
        - docker-restart

    - name: install Kubernetes
      apt: name={{ item }} state=latest
      with_items:
        - kubelet
        - kubeadm
        - kubectl
        - kubernetes-cni

  handlers:
    - name: systemctl-flush
      command: systemctl daemon-reload

    - name: docker-restart
      command: systemctl restart docker
